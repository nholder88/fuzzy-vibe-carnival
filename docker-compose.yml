version: '3.8'

services:
  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - CHORE_SERVICE_URL=http://chore-service:3001
      - INVENTORY_SERVICE_URL=http://inventory-service:8000
      - SHOPPING_SERVICE_URL=http://shopping-service:5000
      - HOUSEHOLD_SERVICE_URL=http://household-service:3002
      - AUTH_SERVICE_URL=http://auth-service:3003
    depends_on:
      - chore-service
      - inventory-service
      - shopping-service
      - household-service
      - auth-service
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Auth Service
  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    ports:
      - '3003:3003'
    environment:
      - NODE_ENV=development
      - PORT=3003
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth_service
      - JWT_SECRET=your_jwt_secret
      - JWT_EXPIRATION=3600s
    depends_on:
      - postgres
    volumes:
      - ./backend/auth-service:/app
      - /app/node_modules

  # Chore Service
  chore-service:
    build:
      context: ./backend/chore-service
      dockerfile: Dockerfile
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
      - PORT=3001
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=chore_service
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./backend/chore-service:/app
      - /app/node_modules

  # Inventory Service
  inventory-service:
    build:
      context: ./backend/inventory-service
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=inventory_service
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./backend/inventory-service:/app

  # Shopping Service
  shopping-service:
    build:
      context: ./backend/shopping-service
      dockerfile: Dockerfile
    ports:
      - '5000:5000'
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=shopping_service;Username=postgres;Password=postgres
      - Redis__ConnectionString=redis:6379
      - Kafka__BootstrapServers=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./backend/shopping-service:/app

  # Household Service
  household-service:
    build:
      context: ./backend/household-service
      dockerfile: Dockerfile
    ports:
      - '3002:3002'
    environment:
      - NODE_ENV=development
      - PORT=3002
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=household_service
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./backend/household-service:/app
      - /app/node_modules

  # Database
  postgres:
    image: postgres:14-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=chore_service,inventory_service,shopping_service,household_service,auth_service
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres:/docker-entrypoint-initdb.d

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  # Kafka for event-driven architecture
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    ports:
      - '2181:2181'
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper

volumes:
  postgres_data:
  redis_data:
